{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","redux/selectors.js","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","Section","title","section","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","contact","name","toLowerCase","includes","actions","addContact","createAction","payload","number","id","uuidv4","deleteContact","contactId","changeFilter","value","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","reset","onSubmit","preventDefault","find","toast","dark","autoClose","form","item","type","onChange","placeholder","input","button","ContactListItem","onClick","ContactList","map","Filter","target","Notification","message","notification","App","length","createReducer","_","combineReducers","persistConfig","key","storage","blackList","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b60d63df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2L927\",\"title\":\"Filter_title__2Oueb\",\"input\":\"Filter_input__1MN19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__RuOL2\",\"title\":\"Section_title__20ubX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21Fyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__lXQJJ\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title = 'Section', children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const items = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return { contacts: visibleContacts };\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete', contactId => ({\r\n  payload: contactId,\r\n}));\r\n\r\nconst changeFilter = createAction('contacts/filter', value => ({\r\n  payload: value,\r\n}));\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport actions from '../../redux/actions';\r\nimport s from './ContactForm.module.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const contact = { name, number };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.find(\r\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\r\n    )\r\n      ? toast.dark(`🦝 ${name} is already in contacts.`, { autoClose: 3000 })\r\n      : dispatch(actions.addContact(contact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.item}>\r\n          <p className={s.title}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter name here...\"\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.item}>\r\n          <p className={s.title}>Number</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter number here...\"\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\n\nexport default function ContactListItem({\n  name = 'anonymous',\n  number = 'unknown',\n  id,\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item}>\n      <p className={s.contact}>\n        {name}: {number}\n      </p>\n      <button\n        onClick={() => dispatch(actions.deleteContact(id))}\n        className={s.button}\n      >\n        Remove\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/selectors';\n\nexport default function ContactList() {\n  const { contacts } = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ name = 'anonymous', number = 'unknown', id }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filter}>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        placeholder=\"Enter name here...\"\n        className={s.input}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.notification}> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Notification from './components/Notification/Notification';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from './redux/selectors';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <Container>\n      <Section title=\"Phone book\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 && <Filter />}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <Notification message=\"Nothing to show.\" />\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import contactsReducer from './reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blackList: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistReducer(persistConfig, contactsReducer) },\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ],\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__16S_c\",\"item\":\"ContactForm_item__2Qlzy\",\"title\":\"ContactForm_title__1EfF4\",\"input\":\"ContactForm_input__3Bvmf\",\"button\":\"ContactForm_button__1VmD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2GSyk\",\"item\":\"ContactList_item__1nn6G\",\"contact\":\"ContactList_contact__1QApY\",\"button\":\"ContactList_button__1eDao\"};"],"sourceRoot":""}